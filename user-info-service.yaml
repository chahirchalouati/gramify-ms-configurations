server:
  port: 7011

springfox:
  documentation:
    swagger-ui:
      path: /swagger-ui/index.html
    base-path: /api-docs
    api-info:
      title: User Info API
      version: 1.0
      description: Example API Description
    host: crcl.com
    schemes:
      - http
      - https
    paths-to-exclude:
      - /error.*
    enable: true
---
spring:
  config:
    activate:
      on-profile: dev
  data:
    mongodb:
      database: dev_userInfo
      host: localhost
      port: 27017
      authentication-database: admin
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://auth-server:9000
          jwk-set-uri: http://auth-server:9000/oauth2/jwks
      client:
        registration:
          user-info-service-oidc:
            provider: spring
            client-id: user-info-service
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: openid
            client-name: user-info-service-oidc
          user-info-service:
            provider: spring
            client-id: user-info-service
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: userInfo.read,userInfo.write
            client-name: user-info-service
        provider:
          spring:
            issuer-uri: http://auth-server:9000
---
spring:
  config:
    activate:
      on-profile: docker
  data:
    mongodb:
      database: docker_userInfo
      host: mongo
      port: 27017
      authentication-database: admin
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://authentication-service:9000
          jwk-set-uri: http://authentication-service:9000/oauth2/jwks
      client:
        registration:
          user-info-service-oidc:
            provider: spring
            client-id: user-info-service
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: openid
            client-name: user-info-service-oidc
          user-info-service:
            provider: spring
            client-id: user-info-service
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: userInfo.read,userInfo.write
            client-name: user-info-service
        provider:
          spring:
            issuer-uri: http://authentication-service:9000
---
spring:
  config:
    activate:
      on-profile: prod
  data:
    mongodb:
      database: prod_userInfo
      host: mongo
      port: 27017
      authentication-database: admin
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://authentication-service:9000
          jwk-set-uri: http://authentication-service:9000/oauth2/jwks
      client:
        registration:
          user-info-service-oidc:
            provider: spring
            client-id: user-info-service
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: openid
            client-name: user-info-service-oidc
          user-info-service:
            provider: spring
            client-id: user-info-service
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: userInfo.read,userInfo.write
            client-name: user-info-service
        provider:
          spring:
            issuer-uri: http://authentication-service:9000

